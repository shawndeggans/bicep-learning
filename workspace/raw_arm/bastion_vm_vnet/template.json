{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "virtualMachines_testdev_vm_name": {
            "defaultValue": "testdev-vm",
            "type": "String"
        },
        "virtualNetworks_testdev_vnet_name": {
            "defaultValue": "testdev-vnet",
            "type": "String"
        },
        "bastionHosts_testdev_vnet_bastion_name": {
            "defaultValue": "testdev-vnet-bastion",
            "type": "String"
        },
        "networkInterfaces_testdev_vm_nic1_name": {
            "defaultValue": "testdev-vm-nic1",
            "type": "String"
        },
        "publicIPAddresses_testdev_vnet_ip_name": {
            "defaultValue": "testdev-vnet-ip",
            "type": "String"
        },
        "publicIPAddresses_testdev_vm_pubip_name": {
            "defaultValue": "testdev-vm-pubip",
            "type": "String"
        },
        "storageAccounts_testdevr5hyia4npjghw_name": {
            "defaultValue": "testdevr5hyia4npjghw",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "name": "[parameters('publicIPAddresses_testdev_vm_pubip_name')]",
            "location": "centralus",
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "testdev-vmr5hyi",
                    "fqdn": "testdev-vmr5hyi.centralus.cloudapp.azure.com"
                },
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "name": "[parameters('publicIPAddresses_testdev_vnet_ip_name')]",
            "location": "centralus",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "20.12.209.76",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "name": "[parameters('virtualNetworks_testdev_vnet_name')]",
            "location": "centralus",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "sub",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "AzureBastionSubnet",
                        "properties": {
                            "addressPrefix": "10.0.1.0/26",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-09-01",
            "name": "[parameters('storageAccounts_testdevr5hyia4npjghw_name')]",
            "location": "centralus",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "properties": {
                "minimumTlsVersion": "TLS1_0",
                "allowBlobPublicAccess": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2022-03-01",
            "name": "[concat(parameters('virtualMachines_testdev_vm_name'), '/enablevmaccess')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_testdev_vm_name'))]"
            ],
            "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Compute",
                "type": "VMAccessAgent",
                "typeHandlerVersion": "2.0",
                "settings": {
                    "UserName": "devAdmin"
                },
                "protectedSettings": {}
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2022-03-01",
            "name": "[concat(parameters('virtualMachines_testdev_vm_name'), '/SetupDevEnvironment')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_testdev_vm_name'))]"
            ],
            "tags": {
                "displayName": "SetupDevEnvironment"
            },
            "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.8",
                "settings": {
                    "fileUris": [
                        "https://raw.githubusercontent.com/quisitive/ortad/main//code/infrastructure/arm/workstation/dev-vm/DSC/buildvm.ps1",
                        "https://raw.githubusercontent.com/quisitive/ortad/main//code/infrastructure/arm/workstation/dev-vm/files/dpi30.ico"
                    ],
                    "commandToExecute": "powershell -ExecutionPolicy bypass -File buildvm.ps1 -rdpPort 3389"
                },
                "protectedSettings": {}
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('virtualNetworks_testdev_vnet_name'), '/AzureBastionSubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_testdev_vnet_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.1.0/26",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('virtualNetworks_testdev_vnet_name'), '/sub')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_testdev_vnet_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.0.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2021-09-01",
            "name": "[concat(parameters('storageAccounts_testdevr5hyia4npjghw_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_testdevr5hyia4npjghw_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "allowPermanentDelete": false,
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2021-09-01",
            "name": "[concat(parameters('storageAccounts_testdevr5hyia4npjghw_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_testdevr5hyia4npjghw_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "protocolSettings": {
                    "smb": {}
                },
                "cors": {
                    "corsRules": []
                },
                "shareDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2021-09-01",
            "name": "[concat(parameters('storageAccounts_testdevr5hyia4npjghw_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_testdevr5hyia4npjghw_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2021-09-01",
            "name": "[concat(parameters('storageAccounts_testdevr5hyia4npjghw_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_testdevr5hyia4npjghw_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2022-03-01",
            "name": "[parameters('virtualMachines_testdev_vm_name')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_testdev_vm_nic1_name'))]",
                "[resourceId('Microsoft.Storage/StorageAccounts', parameters('storageAccounts_testdevr5hyia4npjghw_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D2_v2"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsDesktop",
                        "offer": "Windows-10",
                        "sku": "19h2-pro",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(parameters('virtualMachines_testdev_vm_name'), '_OsDisk_1_68e8ee4e06da49c3b85583a889618ea7')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_testdev_vm_name'), '_OsDisk_1_68e8ee4e06da49c3b85583a889618ea7'))]"
                        },
                        "deleteOption": "Detach"
                    },
                    "dataDisks": [
                        {
                            "lun": 0,
                            "name": "[concat(parameters('virtualMachines_testdev_vm_name'), '_disk2_2f668f5af05d48a18b1e51df7cae01bc')]",
                            "createOption": "Empty",
                            "caching": "None",
                            "managedDisk": {
                                "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_testdev_vm_name'), '_disk2_2f668f5af05d48a18b1e51df7cae01bc'))]"
                            },
                            "deleteOption": "Detach",
                            "toBeDetached": false
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_testdev_vm_name')]",
                    "adminUsername": "devAdmin",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true,
                        "patchSettings": {
                            "patchMode": "AutomaticByOS",
                            "assessmentMode": "ImageDefault"
                        }
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_testdev_vm_nic1_name'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', parameters('storageAccounts_testdevr5hyia4npjghw_name'), '.blob.core.windows.net/')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "2020-11-01",
            "name": "[parameters('bastionHosts_testdev_vnet_bastion_name')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_testdev_vnet_ip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_testdev_vnet_name'), 'AzureBastionSubnet')]"
            ],
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "dnsName": "bst-63fcad3c-0fb8-4132-90d7-f939634dec4e.bastion.azure.com",
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_testdev_vnet_ip_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_testdev_vnet_name'), 'AzureBastionSubnet')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "name": "[parameters('networkInterfaces_testdev_vm_nic1_name')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_testdev_vm_pubip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_testdev_vnet_name'), 'sub')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "10.0.0.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_testdev_vm_pubip_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_testdev_vnet_name'), 'sub')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-09-01",
            "name": "[concat(parameters('storageAccounts_testdevr5hyia4npjghw_name'), '/default/bootdiagnostics-testdevvm-0081f471-b9a0-470c-aeb7-1638d76da408')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_testdevr5hyia4npjghw_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_testdevr5hyia4npjghw_name'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        }
    ]
}